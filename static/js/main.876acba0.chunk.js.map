{"version":3,"sources":["components/NamePlateSVG.jsx","components/Slide.jsx","__helpers__/sortColors.js","__helpers__/FontAwesome.js","App.js","serviceWorker.js","index.js","Timothy_Lui_Resume_2021.pdf"],"names":["NamePlateSVG","props","class","id","width","height","viewBox","fill","xmlns","d","stroke","stroke-width","Slide","name","svg","style","color","role","hexToHSV","hexArray","forEach","v","hex","substring","r","parseInt","g","b","max","Math","apply","min","chr","hue","library","add","faGithub","faLinkedin","faFileAlt","faPaperPlane","App","useState","svgs","setSvgs","intersect","setIntersect","cursor","useRef","findMe","findMeTitle","findMeDetails","useEffect","require","document","addEventListener","_mouseTrack","_showSpotlight","window","scrollTo","querySelectorAll","letter","index","strokeDasharray","getTotalLength","strokeDashoffset","_handleParallax","removeEventListener","current","classList","remove","contains","e","left","clientX","offsetWidth","top","clientY","offsetHeight","_elementIntersect","el1","el2","right","bottom","getBoundingClientRect","el3","isIntersectSection","isIntersectDetails","mixBlendMode","zIndex","target","IntersectionObserver","entries","entry","isIntersecting","threshold","observe","className","params","arr","skills","length","sort","a","slides","map","duplicated","Array","Fragment","_renderSlides","ref","href","rel","icon","size","resumePdf","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.876acba0.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction NamePlateSVG(props) {\n  return (\n    <div class=\"name-plate\">\n      <svg\n        id=\"name-svg\"\n        width=\"40vw\"\n        height=\"100\"\n        viewBox=\"0 0 869 105\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M77.2891 2.45312V8.78125H42.8359V103H35.4531V8.78125H1.70312V2.45312H77.2891Z\"\n          stroke=\"#9598bd\"\n          stroke-width=\"3\"\n        />\n        <path\n          d=\"M100.211 2.45312V103H92.8281V2.45312H100.211Z\"\n          stroke=\"#9598bd\"\n          stroke-width=\"3\"\n        />\n        <path\n          d=\"M126.297 103V2.45312H133.68L179.031 94.3516L221.57 2.45312H228.25V103H221.57V16.0234L181.633 103H175.586L132.977 15.3203V103H126.297Z\"\n          stroke=\"#9598bd\"\n          stroke-width=\"3\"\n        />\n        <path\n          d=\"M255.32 52.4453C255.32 82.3984 269.453 97.375 297.719 97.375C325.469 97.375 339.344 82.3984 339.344 52.4453C339.344 22.8672 325.469 8.07812 297.719 8.07812C269.453 8.07812 255.32 22.8672 255.32 52.4453ZM247.234 52.8672C247.234 18.7891 264.062 1.75 297.719 1.75C330.859 1.75 347.43 18.7891 347.43 52.8672C347.43 86.7578 330.859 103.703 297.719 103.703C264.062 103.703 247.234 86.7578 247.234 52.8672Z\"\n          stroke=\"#9598bd\"\n          stroke-width=\"3\"\n        />\n        <path\n          d=\"M431.523 2.45312V8.78125H397.07V103H389.688V8.78125H355.938V2.45312H431.523Z\"\n          stroke=\"#9598bd\"\n          stroke-width=\"3\"\n        />\n        <path\n          d=\"M443.547 103V2.45312H450.93V48.8594H519.484V2.45312H526.867V103H519.484V55.1875H450.93V103H443.547Z\"\n          stroke=\"#9598bd\"\n          stroke-width=\"3\"\n        />\n        <path\n          d=\"M540.648 2.45312H549.438L581.992 60.8125L615.531 2.45312H623.617L585.93 67.8438V103H578.547V67.8438L540.648 2.45312Z\"\n          stroke=\"#9598bd\"\n          stroke-width=\"3\"\n        />\n        <path\n          d=\"M679.867 2.45312V96.6719H738.086V103H672.484V2.45312H679.867Z\"\n          stroke=\"#9598bd\"\n          stroke-width=\"3\"\n        />\n        <path\n          d=\"M752.922 64.1875V2.45312H760.305V64.1875C760.305 86.3125 771.32 97.375 793.352 97.375C815.383 97.375 826.398 86.3125 826.398 64.1875V2.45312H833.781V64.1875C833.781 90.5312 820.305 103.703 793.352 103.703C766.398 103.703 752.922 90.5312 752.922 64.1875Z\"\n          stroke=\"#9598bd\"\n          stroke-width=\"3\"\n        />\n        <path\n          d=\"M867.18 2.45312V103H859.797V2.45312H867.18Z\"\n          stroke=\"#9598bd\"\n          stroke-width=\"3\"\n        />\n      </svg>\n    </div>\n  );\n}\n\nexport default NamePlateSVG;\n","import React from 'react';\n\nfunction Slide(props) {\n  const {\n    name,\n    fill,\n    svg\n  } = props;\n\n  return (\n    <div class=\"slide\">\n      <span style={{color: fill}}>{name}</span>\n      <svg\n        fill={fill}\n        stroke-width=\"0\"\n        width=\"100px\"\n        height=\"100px\"\n        role=\"img\"\n        viewBox=\"0 0 24 24\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <title>{name}</title>\n        <path d={svg}/>\n      </svg>\n    </div>\n  )\n}\n\nexport default Slide;","/**\n * Color sorting code taken from Shanfan Huang's CodePen.\n * https://jsfiddle.net/shanfan/ojgp5718/\n */\n\n// Sort colors by Hue values.\nexport function sortColors(arr) {\n  hexToHSV(arr);\n  return arr.sort(function (a, b) {\n    return a.hue - b.hue;\n  });\n}\n\n// Calculate the HSV values from HEX.\nconst hexToHSV = (hexArray) => {\n  hexArray.forEach(v => {\n    const hex = v.fill.substring(1);\n    // RGB values to calculate Hue.\n    const r = parseInt(hex.substring(0, 2), 16) / 255;\n    const g = parseInt(hex.substring(2, 4), 16) / 255;\n    const b = parseInt(hex.substring(4, 6), 16) / 255;\n\n    // Getting the Max and Min values for Chroma.\n    const max = Math.max.apply(Math, [r, g, b]);\n    const min = Math.min.apply(Math, [r, g, b]);\n    \n    // Variables for HSV value of hex color.\n    const chr = max - min;\n    let hue = 0;\n    const val = max;\n    let sat = 0;\n\n    if (val > 0) {\n        // Calculate Saturation only if Value isn't 0.\n        sat = chr / val;\n        if (sat > 0) {\n            if (r === max) {\n                hue = 60 * (((g - min) - (b - min)) / chr);\n                if (hue < 0) {\n                    hue += 360;\n                }\n            } else if (g === max) {\n                hue = 120 + 60 * (((b - min) - (r - min)) / chr);\n            } else if (b === max) {\n                hue = 240 + 60 * (((r - min) - (g - min)) / chr);\n            }\n        }\n    }\n\n    v.hue = hue;\n  });\n}","// import the library\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\n// import individual icons\nimport { faGithub, faLinkedin } from \"@fortawesome/free-brands-svg-icons\";\nimport { faFileAlt, faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default function registerIcons() {\n  library.add(faGithub, faLinkedin, faFileAlt, faPaperPlane);\n}\n","/* eslint-disable jsx-a11y/alt-text */\nimport React, { useEffect, useState, useRef } from 'react';\n\nimport Particles from 'react-particles-js';\nimport NamePlateSVG from './components/NamePlateSVG';\nimport Slide from './components/Slide';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport registerIcons from \"./__helpers__/FontAwesome\";\nimport { sortColors } from './__helpers__/sortColors';\nimport './App.scss';\nimport resumePdf from './Timothy_Lui_Resume_2021.pdf';\n\nregisterIcons();\n\nfunction App() {\n  const [svgs, setSvgs] = useState({});\n  const [intersect, setIntersect] = useState(false);\n  // const pathEl = useRef(null);\n  const cursor = useRef(null);\n  const findMe = useRef(null);\n  const findMeTitle = useRef(null);\n  const findMeDetails = useRef(null);\n  \n\n  /**\n   * On Mount events to run. Pulling JSON data, eventlisteners, initial setups.\n   */\n  useEffect(() => {\n    const svgs = require('./__data__/tech-stack-svg-info.json');\n    setSvgs(svgs);\n\n    // Event Listeners - mouse movement.\n    document.addEventListener('mousemove', _mouseTrack);\n    document.addEventListener('scroll', _showSpotlight);\n\n    // Reset to top of the page upon reload.\n    window.addEventListener('beforeunload', () => {\n      window.scrollTo(0,0);\n    });\n\n    // _handleAnimation();\n    const name = document.querySelectorAll('#name-svg path');\n    name.forEach((letter, index) => {\n      // console.log(index, letter.getTotalLength(), letter.style);\n      letter.style.strokeDasharray = letter.getTotalLength();\n      letter.style.strokeDashoffset = letter.getTotalLength();\n    });\n\n    _handleParallax();\n\n    return () => {\n      window.removeEventListener('beforeunload');\n    }\n  }, []);\n\n  useEffect(() => {\n    if (intersect) {\n      // console.log('is intersectping')\n      cursor.current.classList.remove('inverted-inactive');\n      cursor.current.classList.add('inverted-active');\n    } else {\n      // console.log('NOT intersectping')\n      if (cursor.current.classList.contains('inverted-active')) {\n        cursor.current.classList.remove('inverted-active');\n        cursor.current.classList.add('inverted-inactive');\n      }\n    }\n  }, [intersect])\n\n  /**\n   * Sets the coordinates of the spotlight to match the cursor.\n   * @param {*} e - event from mousemove\n   */\n  const _mouseTrack = (e) => {\n    cursor.current.style.left = e.clientX - cursor.current.offsetWidth / 2 + \"px\";\n    cursor.current.style.top = e.clientY - cursor.current.offsetHeight / 2 + \"px\";\n    _showSpotlight();\n  }\n\n  /**\n   * Determine if el1 and el2 are intersecting.\n   * @param {*} el1 - first element\n   * @param {*} el2 - second element\n   */\n  const _elementIntersect = (el1, el2) => {\n    return !(el1.right < el2.left || \n      el1.left > el2.right || \n      el1.bottom < el2.top || \n      el1.top > el2.bottom);\n  }\n\n  /**\n   * Event mousemove to track when cursor is in the \"Find Me\" section to show\n   * the spotlight. Handles the mix-blend-mode of the spotlight when needed for \n   * the hidden content.\n   */\n  const _showSpotlight = () => {\n    const el1 = findMe.current.getBoundingClientRect();\n    const el2 = cursor.current.getBoundingClientRect();\n    const el3 = findMeDetails.current.getBoundingClientRect();\n\n    const isIntersectSection = _elementIntersect(el1, el2);\n    const isIntersectDetails = _elementIntersect(el2, el3);\n\n    // Handle when cursor is within section.\n    if (isIntersectSection && !intersect) {\n      setIntersect(true);\n    } else if (!isIntersectSection && !intersect) {\n      setIntersect(false);\n    }\n\n    // To handle the hidden content to show when spotlight hovers over.\n    if (isIntersectDetails) {\n      cursor.current.style.mixBlendMode = \"normal\";\n      cursor.current.style.zIndex = 1;\n    } else {\n      cursor.current.style.mixBlendMode = \"difference\";\n      cursor.current.style.zIndex = 9;\n    }\n  }\n\n  const _renderSlides = () => {\n    const { skills = [] } = svgs;\n\n    // Sort the colors of the icons by HUE.\n    if (skills.length > 0) {\n      sortColors(skills);\n    }\n\n    const slides = skills.map((svg) => (\n      <Slide {...svg} />\n    ));\n\n    // Needed for the illusion of an infinite scroll\n    const duplicated = Array(5).fill(slides);\n\n    return (\n      <React.Fragment>\n        {duplicated}\n      </React.Fragment>\n    )\n  }\n\n  /**\n   * Parallax effect for when the Find-Me section is visible.\n   * Slides the header up when visibility threshold reaches 80%.\n   */\n  const _handleParallax = () => {\n    const options = {\n      threshold: 0.8\n    }\n\n    const target = findMe.current;\n\n    const intersectionCallback = (entries) => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          // console.log('intersecting find-me')\n          findMeTitle.current.classList.remove('hide');\n          findMeTitle.current.classList.add('show');\n          findMeDetails.current.classList.remove('hide')\n          findMeDetails.current.classList.add('show')\n        } else {\n          // console.log('NOT intersecting find-me')\n          if (findMeTitle.current.classList.contains('show')) {\n            findMeTitle.current.classList.remove('show');\n            findMeTitle.current.classList.add('hide');\n          }\n          findMeDetails.current.classList.remove('show')\n          findMeDetails.current.classList.add('hide')\n        }\n      });\n    }\n\n    let observer = new IntersectionObserver(intersectionCallback, options);\n    observer.observe(target);\n  }\n\n  const particlesOptions = {\n    \"particles\": {\n      \"number\": {\n        \"value\": 160,\n        \"density\": {\n            \"enable\": false\n        }\n      },\n      \"size\": {\n        \"value\": 3,\n        \"random\": true,\n        \"anim\": {\n            \"speed\": 4,\n            \"size_min\": 0.3\n        }\n      },\n      \"line_linked\": {\n        \"enable\": false\n      },\n      \"move\": {\n        \"random\": true,\n        \"speed\": 1,\n        \"direction\": \"top\",\n        \"out_mode\": \"out\"\n      }\n    },\n    \"interactivity\": {\n      \"events\": {\n        \"onhover\": {\n          \"enable\": true,\n          \"mode\": \"bubble\"\n        },\n        \"onclick\": {\n          \"enable\": true,\n          \"mode\": \"repulse\"\n        }\n      },\n      \"modes\": {\n        \"bubble\": {\n          \"distance\": 250,\n          \"duration\": 2,\n          \"size\": 0,\n          \"opacity\": 0\n        },\n        \"repulse\": {\n          \"distance\": 400,\n          \"duration\": 4\n        }\n      }\n    }\n  };\n\n  return (\n    <div class=\"container\">\n      <div class=\"name-plate-container\">\n        <NamePlateSVG />\n      </div>\n      <Particles className=\"particles-wrapper\" params={particlesOptions} />\n      <div class=\"technicals\">\n        <span class=\"technicals_title\">\n          Tech Stack\n        </span>\n        <div class=\"slider-container\">\n          <div class=\"slider\">\n            <div class=\"slider-track\">\n              {_renderSlides()}\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"cursor\" ref={cursor}></div>\n      <div class=\"find-me\" ref={findMe}>\n        <div class=\"find-me_inner\">\n          <span class=\"find-me_title\" ref={findMeTitle}>\n            FIND ME\n          </span>\n          <div class=\"find-me_details-container\">\n            <div class=\"find-me_details\" ref={findMeDetails}>\n              <div className=\"button\">\n                <a className=\"github-cta\" href=\"https://github.com/timmlui\" target=\"_self\" rel=\"noopener noreferrer\">\n                  <FontAwesomeIcon className=\"icon\" icon={[\"fab\", \"github\"]} size=\"3x\" />\n                  <span className=\"icon_title\">Github</span>\n                </a>\n              </div>\n              <div className=\"button\">\n                <a className=\"linkedin-cta\" href=\"https://www.linkedin.com/in/timothy-lui-1b8638170\" target=\"_self\" rel=\"noopener noreferrer\">\n                  <FontAwesomeIcon className=\"icon\" icon={[\"fab\", \"linkedin\"]} size=\"3x\" />\n                  <span className=\"icon_title\">LinkedIn</span>\n                </a>\n              </div>\n              <div className=\"button\">\n                <a className=\"resume-cta\" href={resumePdf} target=\"_blank\" rel=\"noopener noreferrer\">\n                  <FontAwesomeIcon className=\"icon\" icon={[\"fas\", \"file-alt\"]} size=\"3x\" />\n                  <span className=\"icon_title\">Resume</span>\n                </a>\n              </div>\n              <div className=\"button\">\n                <a className=\"email-cta\" href=\"mailto:lui.timm@gmail.com\" target=\"_self\" rel=\"noopener noreferrer\">\n                  <FontAwesomeIcon className=\"icon\" icon={[\"fas\", \"paper-plane\"]} size=\"3x\" />\n                  <span className=\"icon_title\">Email Me</span>\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <footer>\n        Timothy Lui 2021.\n      </footer>\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Timothy_Lui_Resume_2021.ab729266.pdf\";"],"sourceRoot":""}